name: Urban Edge Client

run-name: Urban Edge Client ðŸš€

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This is a job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: get sources
        uses: actions/checkout@v4

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: '8.0.x'

      - name: build
        run: dotnet build Restaurant --configuration release
      
      - name: List files in the repository
        run: |
          ls .

      - name: publish
        run: dotnet publish "./Restaurant/Restaurant/Restaurant.csproj" -c Release -o ./publish 
      
      - name: List files in the repository .
        run: |
          ls .

      - uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: .
          
  # This is a job called "deploy" 
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main'}} # if the branch that we commit to is main then we run "deploy"
    steps:
      - name: say hello
        run: echo "hello from build_deploy"
      
      - name: show branch name that initiated the workflow
        run: echo 'branch name:' ${{ github.ref }}

      - uses: actions/download-artifact@v4
        with:
          name: artifact

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }} 
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: List files in the repository
        run: |
          ls .
      - name: Deploy with rsync
        run: rsync -avz . ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/anakin-skywalker/CICDTargetDir/